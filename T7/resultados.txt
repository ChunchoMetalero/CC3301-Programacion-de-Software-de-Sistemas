Sistema operativo utilizado
Linux debian11mate 5.10.0-26-amd64 #1 SMP Debian 5.10.197-1 (2023-09-29) x86_64 GNU/Linux
==== run-san ====
gcc -g -DSAN=1 -fsanitize=address -fsanitize=undefined -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-san
./viajante.bin-san
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.278556
0 24 11 6 13 12 5 22 30 21 7 29 8 9 27 20 32 25 17 4 18 14 28 19 2 1 15 16 3 10 23 26 31 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.208110
0 30 12 29 22 2 17 20 23 31 8 7 14 32 18 4 13 16 9 11 6 24 15 27 25 28 1 21 26 3 10 5 19 0
Tiempo=10987

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.174195
0 26 31 5 11 9 17 23 2 20 29 18 7 28 19 21 30 12 24 6 27 16 13 4 10 15 3 32 14 25 8 1 22 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.278556
0 24 11 6 13 12 5 22 30 21 7 29 8 9 27 20 32 25 17 4 18 14 28 19 2 1 15 16 3 10 23 26 31 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.208110
0 30 12 29 22 2 17 20 23 31 8 7 14 32 18 4 13 16 9 11 6 24 15 27 25 28 1 21 26 3 10 5 19 0
Tiempo=10987

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.639373
0 26 23 5 30 3 10 24 16 20 8 1 22 14 19 29 2 7 9 32 25 17 6 15 11 13 27 28 31 18 21 4 12 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.278556
0 24 11 6 13 12 5 22 30 21 7 29 8 9 27 20 32 25 17 4 18 14 28 19 2 1 15 16 3 10 23 26 31 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.208110
0 30 12 29 22 2 17 20 23 31 8 7 14 32 18 4 13 16 9 11 6 24 15 27 25 28 1 21 26 3 10 5 19 0
Tiempo=10987

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.329351
0 29 18 23 20 8 28 14 9 17 27 11 13 31 21 1 6 32 5 12 2 19 10 15 16 4 3 24 25 7 30 22 26 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.278556
0 24 11 6 13 12 5 22 30 21 7 29 8 9 27 20 32 25 17 4 18 14 28 19 2 1 15 16 3 10 23 26 31 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.208110
0 30 12 29 22 2 17 20 23 31 8 7 14 32 18 4 13 16 9 11 6 24 15 27 25 28 1 21 26 3 10 5 19 0
Tiempo=10987

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.716139
0 1 21 19 8 32 2 12 10 16 6 15 4 31 20 11 13 24 3 23 22 14 30 18 26 5 9 27 17 28 25 7 29 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.278556
0 24 11 6 13 12 5 22 30 21 7 29 8 9 27 20 32 25 17 4 18 14 28 19 2 1 15 16 3 10 23 26 31 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.208110
0 30 12 29 22 2 17 20 23 31 8 7 14 32 18 4 13 16 9 11 6 24 15 27 25 28 1 21 26 3 10 5 19 0
Tiempo=10987

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.206418
0 19 30 12 29 13 16 5 20 3 15 4 10 18 14 27 28 25 32 7 22 2 21 31 1 24 6 23 26 11 9 17 8 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.278556
0 24 11 6 13 12 5 22 30 21 7 29 8 9 27 20 32 25 17 4 18 14 28 19 2 1 15 16 3 10 23 26 31 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.208110
0 30 12 29 22 2 17 20 23 31 8 7 14 32 18 4 13 16 9 11 6 24 15 27 25 28 1 21 26 3 10 5 19 0
Tiempo=10987

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.401880
0 12 30 26 2 31 5 6 15 3 16 10 4 13 24 18 28 20 11 8 29 21 1 22 19 9 25 14 7 27 32 17 23 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.278556
0 24 11 6 13 12 5 22 30 21 7 29 8 9 27 20 32 25 17 4 18 14 28 19 2 1 15 16 3 10 23 26 31 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.208110
0 30 12 29 22 2 17 20 23 31 8 7 14 32 18 4 13 16 9 11 6 24 15 27 25 28 1 21 26 3 10 5 19 0
Tiempo=10987

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.268097
0 2 24 16 13 27 5 17 11 9 8 23 15 10 12 31 21 19 30 4 3 6 25 26 20 32 7 1 18 14 22 28 29 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.278556
0 24 11 6 13 12 5 22 30 21 7 29 8 9 27 20 32 25 17 4 18 14 28 19 2 1 15 16 3 10 23 26 31 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.208110
0 30 12 29 22 2 17 20 23 31 8 7 14 32 18 4 13 16 9 11 6 24 15 27 25 28 1 21 26 3 10 5 19 0
Tiempo=10987

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=3821 speedup=2.875425 distancia minima=11.268097
0 2 24 16 13 27 5 17 11 9 8 23 15 10 12 31 21 19 30 4 3 6 25 26 20 32 7 1 18 14 22 28 29 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run-g ====
gcc -g -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-g
./viajante.bin-g
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.851334
0 31 10 5 8 16 9 12 29 11 19 4 22 18 15 2 26 14 7 28 21 20 24 13 32 23 30 25 27 1 17 6 3 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.698956
0 27 12 26 16 2 15 23 30 9 14 24 29 13 11 31 28 20 18 22 6 4 1 3 25 17 7 21 5 19 8 32 10 0
Tiempo=6003

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.314166
0 21 14 7 16 2 5 15 17 6 20 24 27 1 31 19 12 3 18 25 9 32 30 23 11 28 4 13 29 22 10 8 26 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.851334
0 31 10 5 8 16 9 12 29 11 19 4 22 18 15 2 26 14 7 28 21 20 24 13 32 23 30 25 27 1 17 6 3 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.698956
0 27 12 26 16 2 15 23 30 9 14 24 29 13 11 31 28 20 18 22 6 4 1 3 25 17 7 21 5 19 8 32 10 0
Tiempo=6003

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.215593
0 10 14 2 13 29 24 22 11 7 8 31 20 26 30 1 23 17 27 4 25 3 6 28 32 12 16 15 5 21 9 18 19 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.851334
0 31 10 5 8 16 9 12 29 11 19 4 22 18 15 2 26 14 7 28 21 20 24 13 32 23 30 25 27 1 17 6 3 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.698956
0 27 12 26 16 2 15 23 30 9 14 24 29 13 11 31 28 20 18 22 6 4 1 3 25 17 7 21 5 19 8 32 10 0
Tiempo=6003

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.309963
0 21 16 26 32 1 30 8 19 28 29 22 13 31 6 24 3 7 5 15 2 9 14 10 25 20 17 23 12 4 27 18 11 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.851334
0 31 10 5 8 16 9 12 29 11 19 4 22 18 15 2 26 14 7 28 21 20 24 13 32 23 30 25 27 1 17 6 3 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.698956
0 27 12 26 16 2 15 23 30 9 14 24 29 13 11 31 28 20 18 22 6 4 1 3 25 17 7 21 5 19 8 32 10 0
Tiempo=6003

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.242887
0 8 2 29 13 27 28 20 18 24 22 3 19 7 10 21 30 23 32 14 25 4 31 16 12 9 26 15 5 17 1 6 11 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.851334
0 31 10 5 8 16 9 12 29 11 19 4 22 18 15 2 26 14 7 28 21 20 24 13 32 23 30 25 27 1 17 6 3 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.698956
0 27 12 26 16 2 15 23 30 9 14 24 29 13 11 31 28 20 18 22 6 4 1 3 25 17 7 21 5 19 8 32 10 0
Tiempo=6003

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.225727
0 21 2 10 9 15 16 18 22 13 11 1 17 7 14 28 20 19 23 30 12 8 5 26 27 3 24 6 29 4 25 31 32 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.851334
0 31 10 5 8 16 9 12 29 11 19 4 22 18 15 2 26 14 7 28 21 20 24 13 32 23 30 25 27 1 17 6 3 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.698956
0 27 12 26 16 2 15 23 30 9 14 24 29 13 11 31 28 20 18 22 6 4 1 3 25 17 7 21 5 19 8 32 10 0
Tiempo=6003

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.907334
0 7 5 11 17 1 12 24 25 20 22 3 10 19 13 29 28 18 6 32 9 26 8 15 16 2 21 14 23 30 27 4 31 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.851334
0 31 10 5 8 16 9 12 29 11 19 4 22 18 15 2 26 14 7 28 21 20 24 13 32 23 30 25 27 1 17 6 3 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.698956
0 27 12 26 16 2 15 23 30 9 14 24 29 13 11 31 28 20 18 22 6 4 1 3 25 17 7 21 5 19 8 32 10 0
Tiempo=6003

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.103593
0 7 25 31 32 8 9 10 16 12 29 18 3 24 6 17 11 22 13 20 28 5 26 15 21 2 27 23 30 1 19 4 14 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.851334
0 31 10 5 8 16 9 12 29 11 19 4 22 18 15 2 26 14 7 28 21 20 24 13 32 23 30 25 27 1 17 6 3 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.698956
0 27 12 26 16 2 15 23 30 9 14 24 29 13 11 31 28 20 18 22 6 4 1 3 25 17 7 21 5 19 8 32 10 0
Tiempo=6003

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=1966 speedup=3.053408 distancia minima=10.907334
0 7 5 11 17 1 12 24 25 20 22 3 10 19 13 29 28 18 6 32 9 26 8 15 16 2 21 14 23 30 27 4 31 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run ====
gcc -O -DOPT=1 -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin
./viajante.bin
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.828193
0 5 15 31 1 24 19 20 30 7 3 8 27 32 11 21 23 12 13 10 28 18 25 22 4 17 29 9 14 26 16 2 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.577318
0 23 9 18 22 30 4 2 19 11 6 3 15 5 28 1 29 24 17 31 13 14 16 20 26 27 10 21 12 8 7 32 25 0
Tiempo=4399

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.125274
0 1 22 29 13 10 6 23 27 30 2 20 9 11 12 21 24 17 31 25 14 16 26 3 8 28 5 4 19 18 15 32 7 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.828193
0 5 15 31 1 24 19 20 30 7 3 8 27 32 11 21 23 12 13 10 28 18 25 22 4 17 29 9 14 26 16 2 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.577318
0 23 9 18 22 30 4 2 19 11 6 3 15 5 28 1 29 24 17 31 13 14 16 20 26 27 10 21 12 8 7 32 25 0
Tiempo=4399

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.280519
0 23 6 32 14 19 24 26 7 9 25 15 5 13 29 17 4 31 11 1 3 30 16 22 2 20 18 8 21 12 10 27 28 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.828193
0 5 15 31 1 24 19 20 30 7 3 8 27 32 11 21 23 12 13 10 28 18 25 22 4 17 29 9 14 26 16 2 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.577318
0 23 9 18 22 30 4 2 19 11 6 3 15 5 28 1 29 24 17 31 13 14 16 20 26 27 10 21 12 8 7 32 25 0
Tiempo=4399

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.079267
0 12 5 9 15 7 11 24 17 31 2 20 30 22 1 13 25 23 28 27 29 6 10 21 18 19 4 14 26 32 8 16 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.828193
0 5 15 31 1 24 19 20 30 7 3 8 27 32 11 21 23 12 13 10 28 18 25 22 4 17 29 9 14 26 16 2 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.577318
0 23 9 18 22 30 4 2 19 11 6 3 15 5 28 1 29 24 17 31 13 14 16 20 26 27 10 21 12 8 7 32 25 0
Tiempo=4399

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.009422
0 25 11 1 15 8 32 23 10 13 6 3 9 12 21 28 27 30 4 17 29 31 19 22 24 5 16 26 14 2 7 20 18 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.828193
0 5 15 31 1 24 19 20 30 7 3 8 27 32 11 21 23 12 13 10 28 18 25 22 4 17 29 9 14 26 16 2 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.577318
0 23 9 18 22 30 4 2 19 11 6 3 15 5 28 1 29 24 17 31 13 14 16 20 26 27 10 21 12 8 7 32 25 0
Tiempo=4399

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.174564
0 32 22 18 11 4 21 9 12 13 31 25 15 30 14 26 16 2 1 17 19 29 24 6 20 10 28 8 7 3 5 27 23 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.828193
0 5 15 31 1 24 19 20 30 7 3 8 27 32 11 21 23 12 13 10 28 18 25 22 4 17 29 9 14 26 16 2 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.577318
0 23 9 18 22 30 4 2 19 11 6 3 15 5 28 1 29 24 17 31 13 14 16 20 26 27 10 21 12 8 7 32 25 0
Tiempo=4399

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.844036
0 10 13 17 4 22 2 20 18 30 1 31 12 25 9 19 6 11 26 8 23 24 29 3 15 16 14 7 32 27 28 5 21 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.828193
0 5 15 31 1 24 19 20 30 7 3 8 27 32 11 21 23 12 13 10 28 18 25 22 4 17 29 9 14 26 16 2 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.577318
0 23 9 18 22 30 4 2 19 11 6 3 15 5 28 1 29 24 17 31 13 14 16 20 26 27 10 21 12 8 7 32 25 0
Tiempo=4399

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.976617
0 27 28 3 8 16 20 18 22 30 2 26 32 9 11 29 4 25 12 10 13 19 6 7 14 24 1 17 15 5 21 31 23 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.828193
0 5 15 31 1 24 19 20 30 7 3 8 27 32 11 21 23 12 13 10 28 18 25 22 4 17 29 9 14 26 16 2 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.577318
0 23 9 18 22 30 4 2 19 11 6 3 15 5 28 1 29 24 17 31 13 14 16 20 26 27 10 21 12 8 7 32 25 0
Tiempo=4399

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.865485
0 15 10 12 21 9 13 7 26 32 1 18 30 22 19 17 29 4 24 16 20 31 6 11 28 25 2 23 8 5 3 14 27 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.828193
0 5 15 31 1 24 19 20 30 7 3 8 27 32 11 21 23 12 13 10 28 18 25 22 4 17 29 9 14 26 16 2 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.577318
0 23 9 18 22 30 4 2 19 11 6 3 15 5 28 1 29 24 17 31 13 14 16 20 26 27 10 21 12 8 7 32 25 0
Tiempo=4399

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=1538 speedup=2.860208 distancia minima=11.865485
0 15 10 12 21 9 13 7 26 32 1 18 30 22 19 17 29 4 24 16 20 31 6 11 28 25 2 23 8 5 3 14 27 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
